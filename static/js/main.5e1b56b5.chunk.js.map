{"version":3,"sources":["pages/About/Nitin_Mukesh_Passport_Photo_Front.jpg","components/Header/index.js","components/Footer/index.js","pages/Portfolio/index.js","pages/Contact/index.js","pages/About/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","Navbar","bg","variant","expand","Brand","href","Toggle","Collapse","Nav","className","Link","Footer","target","rel","Portfolio","Contact","About","Container","Row","Col","md","id","Image","src","NM","alt","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,+D,sNCsB5BC,G,MAjBA,WACX,OACI,kBAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,QAAQ,QAAQC,OAAO,MACtC,kBAACH,EAAA,EAAOI,MAAR,CAAcC,KAAK,SAAQ,6CAC3B,kBAACL,EAAA,EAAOM,OAAR,MACA,kBAACN,EAAA,EAAOO,SAAR,KACI,kBAACC,EAAA,EAAD,CAAKC,UAAU,YACf,kBAACD,EAAA,EAAD,KACI,kBAACA,EAAA,EAAIE,KAAL,CAAUL,KAAK,SAAf,SACA,kBAACG,EAAA,EAAIE,KAAL,CAAUL,KAAK,aAAf,aACA,kBAACG,EAAA,EAAIE,KAAL,CAAUL,KAAK,WAAf,gBCFLM,MAXf,WACI,OACI,4BAAQF,UAAU,UACd,yBAAKA,UAAU,qCAAf,uBAEF,uBAAGJ,KAAK,+BAA+BO,OAAO,SAASC,IAAI,uBAA3D,oBCGKC,EARG,WACd,OACI,2CCMOC,EARC,WACZ,OACI,yC,yDC2DOC,EAvDD,WACV,OACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAG,iBACX,kBAACH,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACL,0CAGR,kBAACF,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,IAAT,IAAc,+BAElB,kBAACF,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACL,kBAACE,EAAA,EAAD,CACIC,IAAKC,IACLC,IAAI,eACJhB,UAAU,WAGlB,kBAACU,EAAA,EAAD,CAAKC,GAAI,IACL,4BACI,sNAIA,8KAKA,gNAIA,0HAIA,2QC1BjBM,MAdf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,mBAAmBC,UAAWb,IAChD,kBAAC,IAAD,CAAOW,OAAK,EAACC,KAAK,uBAAuBC,UAAWf,IACpD,kBAAC,IAAD,CAAOa,OAAK,EAACC,KAAK,qBAAqBC,UAAWd,IACtD,kBAAC,EAAD,QCHce,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,EAAD,MAASC,SAASC,eAAe,SD4H7B,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.5e1b56b5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Nitin_Mukesh_Passport_Photo_Front.a5577703.jpg\";","import React from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport \"./style.css\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <Navbar bg=\"light\" variant=\"light\" expand=\"md\">\r\n            <Navbar.Brand href=\"about\"><h3>Nitin Mukesh</h3></Navbar.Brand>\r\n            <Navbar.Toggle />\r\n            <Navbar.Collapse>\r\n                <Nav className=\"mr-auto\" />\r\n                <Nav>\r\n                    <Nav.Link href=\"about\">About</Nav.Link>\r\n                    <Nav.Link href=\"portfolio\">Portfolio</Nav.Link>\r\n                    <Nav.Link href=\"contact\">Contact</Nav.Link>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"bottom\">\r\n            <div className=\"footer-copyright text-center py-3\">\r\n                &copy; 2020 Copyright:\r\n          <a href=\"https://github.com/nitinmuk/\" target=\"_blank\" rel=\"noopener noreferrer\"> Nitin Mukesh</a>\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nconst Portfolio = () => {\r\n    return (\r\n        <div>\r\n            Portfolio\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Portfolio;","import React from \"react\";\r\n\r\nconst Contact = () => {\r\n    return (\r\n        <div>\r\n            Contact\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contact;","import React from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport \"./style.css\";\r\nimport NM from \"./Nitin_Mukesh_Passport_Photo_Front.jpg\";\r\n\r\nconst About = () => {\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col md={8} id=\"about-me-pane\">\r\n                    <Row>\r\n                        <Col md={4}>\r\n                            <h4>About Me</h4>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={12}> <hr></hr></Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={2}>\r\n                            <Image\r\n                                src={NM}\r\n                                alt=\"Nitin Mukesh\"\r\n                                className=\"image\"\r\n                            />\r\n                        </Col>\r\n                        <Col md={10}>\r\n                            <ul>\r\n                                <li>\r\n                                    Full Stack Developer & AWS Certified Solution Architect Associate with 11 years of experience in the\r\n                                    software development and implementation using Java, SQL and related technologies.\r\n                                </li>\r\n                                <li>\r\n                                    Currently working as a backend cloud developer with a strong focus on developing serverless\r\n                                    Microservices on AWS following\r\n                                    DevOps methodology.\r\n                                </li>\r\n                                <li>\r\n                                    Recently earned a certificate in full stack web development from the University of Western Australia,\r\n                                    with newly developed skills in JavaScript, CSS, React, jQuery and Node.js.\r\n                                </li>\r\n                                <li>\r\n                                    Passionate about solving\r\n                                    problems, learning new skills and developing robust applications.\r\n                                </li>\r\n                                <li>\r\n                                    Excellent written and verbal communication skills, high analytical and problem-solving skills, quick\r\n                                    learner, strong relationship building and interpersonal skills and the ability to communicate easily\r\n                                    with people at all levels.\r\n                                </li>\r\n                            </ul>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default About;","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Portfolio from \"./pages/Portfolio\";\nimport Contact from \"./pages/Contact\";\nimport About from \"./pages/About\";\n\nfunction App() {\n  return (\n    <Router>      \n      <Header />      \n          <Route exact path=\"/portfolio/about\" component={About} />\n          <Route exact path=\"/portfolio/portfolio\" component={Portfolio} />\n          <Route exact path=\"/portfolio/contact\" component={Contact} />\n      <Footer />    \n    </Router>\n    \n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}